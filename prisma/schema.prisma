generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  senha          String
  usernick       String   @unique
  nome           String
  nascimento     String   // ou Date
  course         String
  bio            String?  // <-- ADICIONE ESTA LINHA
  isadmin        Boolean  @default(false)
  profilePicture String?
  createdAt      DateTime @default(now())

  posts                 Post[]
  comments              Comment[]
  likes                 Like[]
  notifications         Notification[]           @relation("NotifiedUser")
  triggeredNotifications Notification[]          @relation("TriggeringUser")
}


model Post {
  id        Int       @id @default(autoincrement())
  content   String    @db.VarChar(500)
  createdAt DateTime  @default(now())
  userId    Int

  user      User      @relation(fields: [userId], references: [id])
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(300)
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime

  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model PostDeleted {
  id        Int      @id @default(autoincrement())
  postId    Int      @unique(map: "PostDeleted_postId_key")
  content   String   @db.VarChar(500)
  createdAt DateTime @default(now())
  userId    Int

  @@index([userId], map: "PostDeleted_userId_fkey")
}

model Notification {
  id            Int      @id @default(autoincrement())
  userId        Int
  triggeredById Int
  postId        Int?
  postDeletedId Int?
  action        String   @db.VarChar(100)
  isViewed      Boolean  @default(false)
  createdAt     DateTime @default(now())

  user         User @relation("NotifiedUser", fields: [userId], references: [id])
  triggeredBy  User @relation("TriggeringUser", fields: [triggeredById], references: [id])
}

model Like {
  id     Int   @id @default(autoincrement())
  userId Int
  postId Int

  user   User  @relation(fields: [userId], references: [id])
  post   Post  @relation(fields: [postId], references: [id])
}
